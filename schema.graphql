# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.This scalar is serialized to a string in ISO 8601 format and parsed from a string in ISO 8601 format.
"""
scalar DateTimeISO

enum FlightStatus {
  ARCHIVED
  ARRIVED
  CANCELED
  DELAYED
  DEPARTED
  LANDED
  SCHEDULED
}

enum FlightVendor {
  AERO_DATA_BOX
  FLIGHT_STATS
}

type GQL_Airline {
  iata: String!
  id: ID!
  isLowCost: Boolean!
  logoCompactImageType: ImageType!
  logoCompactImageURL: String!
  logoFullImageType: ImageType!
  logoFullImageURL: String!
  name: String!
}

type GQL_Airport {
  cityCode: String!
  cityName: String!
  countryCode: String!
  countyName: String
  elevation: Int
  iata: String!
  id: ID!
  latitude: Int!
  longitude: Int!
  name: String!
  state: String
  timezone: String!
}

type GQL_Flight {
  Airline: GQL_Airline!
  Destination: GQL_Airport!
  Origin: GQL_Airport!
  Promptness: GQL_FlightPromptness
  actualGateArrival: DateTimeISO
  actualGateDeparture: DateTimeISO
  aircraftTailnumber: String
  airlineIata: String!
  departureDate: DateTimeISO!
  destinationBaggageClaim: String
  destinationGate: String
  destinationIata: String!
  destinationTerminal: String
  estimatedGateArrival: DateTimeISO!
  estimatedGateDeparture: DateTimeISO!
  flightNumber: String!
  id: ID!
  originGate: String
  originIata: String!
  originTerminal: String
  reconAttempt: Int
  scheduledGateArrival: DateTimeISO!
  scheduledGateDeparture: DateTimeISO!
  status: FlightStatus!
  totalDistanceKm: Int
}

type GQL_FlightPromptness {
  airlineIata: String!
  averageDelayTimeMs: Int!
  cancelledCount: Int!
  createdAt: DateTimeISO!
  daysObserved: Int!
  destinationIata: String!
  divertedCount: Int!
  excessiveCount: Int!
  expiresAt: DateTimeISO!
  flightNumber: String!
  flightsObservered: Int!
  id: ID!
  lateCount: Int!
  onTimeCount: Int!
  onTimePercent: Int!
  originIata: String!
  rating: Int!
  updatedAt: DateTimeISO!
  vendor: FlightVendor!
  veryLateCount: Int!
}

type GQL_UserFlight {
  createdAt: DateTimeISO!
  flight: GQL_Flight!
  flightID: String!
  id: ID!
  shouldAlert: Boolean!
  updatedAt: DateTimeISO!
  userID: String!
}

enum ImageType {
  PNG
  SVG
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

type Mutation {
  _sendFlightNotification(body: String!, data: JSON!, flightID: String!, title: String!): Float!
  deleteUserFlight(flightID: String!): String!
}

type Query {
  airline(iata: String!): GQL_Airline!
  airlines: [GQL_Airline!]!
  airport(iata: String!): GQL_Airport!
  flight(flightID: String!): GQL_Flight!
  flightPromptness(flightID: String!): GQL_FlightPromptness!
  flights(airlineIata: String!, departureDate: DateTimeISO!, flightNumber: String!): [GQL_Flight!]!
  userActiveFlights: [GQL_UserFlight!]!
  userArchivedFlights: [GQL_UserFlight!]!
  userFlight(flightID: String!): GQL_UserFlight
  userHasFlights: Boolean!
}