# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type Aircraft {
  AircraftPositions: [AircraftPosition!]!
  airlineIata: String!
  createdAt: DateTimeISO!
  description: String
  firstFlight: DateTimeISO!
  iata: String
  icao: String!
  id: Int!
  imageURL: String
  model: String!
  tailNumber: String!
  updatedAt: DateTimeISO!
}

type AircraftPosition {
  aircraftID: Int!
  airlineIata: String!
  altitude: Int
  createdAt: DateTimeISO!
  destinationIata: String!
  flightDate: Int!
  flightMonth: Int!
  flightNumber: String!
  flightYear: Int!
  id: Int!
  latitude: Int
  longitude: Int
  originIata: String!
  updatedAt: DateTimeISO!
}

type Airline {
  iata: String!
  id: ID!
  isLowCost: Boolean!
  logoCompactImageType: ImageType!
  logoCompactImageURL: String!
  logoFullImageType: ImageType!
  logoFullImageURL: String!
  name: String!
}

type Airport {
  cityCode: String!
  cityName: String!
  countryCode: String!
  countyName: String
  elevation: Int
  iata: String!
  id: ID!
  latitude: Int!
  longitude: Int!
  name: String!
  state: String
  timezone: String!
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.This scalar is serialized to a string in ISO 8601 format and parsed from a string in ISO 8601 format.
"""
scalar DateTimeISO

type Flight {
  Airline: Airline!
  Destination: Airport!
  Origin: Airport!
  actualGateArrival: DateTimeISO
  actualGateDeparture: DateTimeISO
  aircraftTailNumber: String
  airlineIata: String!
  destinationBaggageClaim: String
  destinationGate: String
  destinationIata: String!
  destinationTerminal: String
  estimatedGateArrival: DateTimeISO!
  estimatedGateDeparture: DateTimeISO!
  flightDate: Int!
  flightMonth: Int!
  flightNumber: String!
  flightYear: Int!
  id: ID!
  originGate: String
  originIata: String!
  originTerminal: String
  reconAttempt: Int
  scheduledGateArrival: DateTimeISO!
  scheduledGateDeparture: DateTimeISO!
  status: FlightStatus!
  totalDistanceKm: Int
}

type FlightPromptness {
  airlineIata: String!
  averageDelayTimeMs: Int!
  cancelledCount: Int!
  createdAt: DateTimeISO!
  daysObserved: Int!
  destinationIata: String!
  divertedCount: Int!
  excessiveCount: Int!
  expiresAt: DateTimeISO!
  flightNumber: String!
  flightsObservered: Int!
  id: ID!
  lateCount: Int!
  onTimeCount: Int!
  onTimePercent: Int!
  originIata: String!
  rating: Int!
  updatedAt: DateTimeISO!
  vendor: FlightVendor!
  veryLateCount: Int!
}

enum FlightStatus {
  ARCHIVED
  ARRIVED
  CANCELED
  DELAYED
  DEPARTED
  LANDED
  SCHEDULED
}

enum FlightVendor {
  AERO_DATA_BOX
  FLIGHT_STATS
}

enum ImageType {
  PNG
  SVG
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

type Mutation {
  _sendFlightNotification(body: String!, data: JSON, flightID: String!, title: String!): Float!
  addUserFlight(flightID: String!): String!
  deleteUserFlight(flightID: String!): String!
  userSignIn: Boolean!
}

type Query {
  aircraft(tailNumber: String!): Aircraft
  aircraftPosition(aircraftID: Float!): AircraftPosition
  airline(iata: String!): Airline!
  airlines: [Airline!]!
  airport(iata: String!): Airport!
  flight(flightID: String!): Flight!
  flightPromptness(flightID: String!): FlightPromptness!
  flights(airlineIata: String!, date: Float!, flightNumber: String!, month: Float!, year: Float!): [Flight!]!
  randomFlight: Flight!
  user: User!
  userActiveFlights: [UserFlight!]!
  userArchivedFlights: [UserFlight!]!
  userFlight(flightID: String!): UserFlight
  userHasFlights: Boolean!
}

type User {
  Authentications: [UserAuthentication!]!
  avatarURL: String
  createdAt: DateTimeISO!
  displayName: String
  id: ID!
  lastSignInAt: DateTimeISO!
  updatedAt: DateTimeISO!
}

type UserAuthentication {
  avatarURL: String
  createdAt: DateTimeISO!
  email: String
  id: ID!
  phone: String
  provider: String!
  userID: String!
}

type UserFlight {
  Flight: Flight!
  createdAt: DateTimeISO!
  flightID: String!
  id: ID!
  shouldAlert: Boolean!
  updatedAt: DateTimeISO!
  userID: String!
}